# coding: utf-8

"""
    ChartHop API

    REST API for ChartHop

    The version of the OpenAPI document: V1.0.0
    Contact: support@charthop.com
    Created by: https://www.charthop.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from chart_hop_python_sdk import schemas  # noqa: F401


class GraphCountsResponse(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "counts",
            "managerToJobMap",
            "jobToManagerMap",
        }
        
        class properties:
        
            @staticmethod
            def counts() -> typing.Type['GraphCountsResponseCounts']:
                return GraphCountsResponseCounts
        
            @staticmethod
            def managerToJobMap() -> typing.Type['GraphCountsResponseManagerToJobMap']:
                return GraphCountsResponseManagerToJobMap
        
            @staticmethod
            def jobToManagerMap() -> typing.Type['GraphCountsResponseJobToManagerMap']:
                return GraphCountsResponseJobToManagerMap
            __annotations__ = {
                "counts": counts,
                "managerToJobMap": managerToJobMap,
                "jobToManagerMap": jobToManagerMap,
            }
    
    counts: 'GraphCountsResponseCounts'
    managerToJobMap: 'GraphCountsResponseManagerToJobMap'
    jobToManagerMap: 'GraphCountsResponseJobToManagerMap'
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["counts"]) -> 'GraphCountsResponseCounts': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["managerToJobMap"]) -> 'GraphCountsResponseManagerToJobMap': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["jobToManagerMap"]) -> 'GraphCountsResponseJobToManagerMap': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["counts", "managerToJobMap", "jobToManagerMap", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["counts"]) -> 'GraphCountsResponseCounts': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["managerToJobMap"]) -> 'GraphCountsResponseManagerToJobMap': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["jobToManagerMap"]) -> 'GraphCountsResponseJobToManagerMap': ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["counts", "managerToJobMap", "jobToManagerMap", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        counts: 'GraphCountsResponseCounts',
        managerToJobMap: 'GraphCountsResponseManagerToJobMap',
        jobToManagerMap: 'GraphCountsResponseJobToManagerMap',
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'GraphCountsResponse':
        return super().__new__(
            cls,
            *args,
            counts=counts,
            managerToJobMap=managerToJobMap,
            jobToManagerMap=jobToManagerMap,
            _configuration=_configuration,
            **kwargs,
        )

from chart_hop_python_sdk.model.graph_counts_response_counts import GraphCountsResponseCounts
from chart_hop_python_sdk.model.graph_counts_response_job_to_manager_map import GraphCountsResponseJobToManagerMap
from chart_hop_python_sdk.model.graph_counts_response_manager_to_job_map import GraphCountsResponseManagerToJobMap
