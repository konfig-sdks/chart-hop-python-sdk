# coding: utf-8

"""
    ChartHop API

    REST API for ChartHop

    The version of the OpenAPI document: V1.0.0
    Contact: support@charthop.com
    Created by: https://www.charthop.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from chart_hop_python_sdk import schemas  # noqa: F401


class FormSubmitRequest(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "data",
            "personId",
        }
        
        class properties:
            personId = schemas.StrSchema
        
            @staticmethod
            def data() -> typing.Type['FormSubmitRequestData']:
                return FormSubmitRequestData
        
            @staticmethod
            def blocksData() -> typing.Type['FormSubmitRequestBlocksData']:
                return FormSubmitRequestBlocksData
            __annotations__ = {
                "personId": personId,
                "data": data,
                "blocksData": blocksData,
            }
    
    data: 'FormSubmitRequestData'
    personId: MetaOapg.properties.personId
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["personId"]) -> MetaOapg.properties.personId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["data"]) -> 'FormSubmitRequestData': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["blocksData"]) -> 'FormSubmitRequestBlocksData': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["personId", "data", "blocksData", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["personId"]) -> MetaOapg.properties.personId: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["data"]) -> 'FormSubmitRequestData': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["blocksData"]) -> typing.Union['FormSubmitRequestBlocksData', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["personId", "data", "blocksData", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        data: 'FormSubmitRequestData',
        personId: typing.Union[MetaOapg.properties.personId, str, ],
        blocksData: typing.Union['FormSubmitRequestBlocksData', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'FormSubmitRequest':
        return super().__new__(
            cls,
            *args,
            data=data,
            personId=personId,
            blocksData=blocksData,
            _configuration=_configuration,
            **kwargs,
        )

from chart_hop_python_sdk.model.form_submit_request_blocks_data import FormSubmitRequestBlocksData
from chart_hop_python_sdk.model.form_submit_request_data import FormSubmitRequestData
